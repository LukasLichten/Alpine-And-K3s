# this installs all required components for k3s to function on a node
- name: Building-kluster
  hosts: kube
  tasks:
  - name: Cni-Install
    community.general.apk:
     name: cni-plugins  cni-plugin-flannel
     no_cache: true
     state: present
    become: true

  - name: Dbus-just-in-case
    community.general.apk:
     name: dbus
     no_cache: true
     state: present
    become: true

  - name: Install-containerd
    community.general.apk:
     name: containerd
     no_cache: true
     state: present
    become: true

  - name: Longhorn-requirements
    community.general.apk:
     name: bash curl findmnt grep gawk blkid lsblk
     no_cache: true
     state: present
    become: true

  - name: Longhorn-iscsi
    community.general.apk:
     name: open-iscsi open-iscsi-openrc
     no_cache: true
     state: present
    become: true

  - name: Longhorn-iscsi-start
    ansible.builtin.service:
     name: iscsid
     enabled: true
     state: started
    become: true

  - name: Longhorn-nfs
    community.general.apk:
     name: nfs-utils
     no_cache: true
     state: present
    become: true

  - name: Longhorn-openrc-rc-local
    ansible.builtin.template:
     src: ../templates/k3s/rc.local.start
     dest: /etc/local.d/rc.local.start
     mode: 'u+rwx'
    become: true

  - name: Longhorn-local-service
    ansible.builtin.service:
     name: local
     enabled: true
     state: restarted
    become: true

  - name: Install-Cifs
    community.general.apk:
     name: cifs-utils jq util-linux coreutils
     no_cache: true
     state: present
    become: true

  - name: Create-Folder-For-Cifs
    ansible.builtin.file:
     path: "/usr/libexec/kubernetes/kubelet-plugins/volume/exec/fstab~cifs"
     state: directory
     mode: '755'
    become: true

  - name: Download-Cifs-Plugin
    ansible.builtin.uri:
     url: https://raw.githubusercontent.com/fstab/cifs/master/cifs
     dest: "/usr/libexec/kubernetes/kubelet-plugins/volume/exec/fstab~cifs/"
     mode: '755'
     force: true
    become: true

  # - name: Adding-init.d
  #  template:
  #   src: ../templates/k3s/initd-k3s
  #   dest: /etc/init.d/k3s
  #  become: true

- name: Setting-up-as-server
  hosts: masters
  tasks:
   - name: Conf.d-node
     ansible.builtin.template:
      src: ../templates/k3s/confd-k3s-server
      dest: /etc/conf.d/k3s
     become: true
   - name: Install-K3s
     shell:
      cmd: curl -sfL https://get.k3s.io | INSTALL_K3S_VERSION={{ k3s_version }} K3S_TOKEN={{ k3s_token }} sh - --server https://{{ k3s_vip }}:6443
     become: true
     args:
      warn: false
   - name: Replace-Init.d
     ansible.builtin.template:
      src: ../templates/k3s/confd-k3s-server
      dest: /etc/conf.d/k3s
     become: true
   - name: Let it register
     wait_for:
      timeout: 10
   - name: Restart-K3s
     service:
      name: k3s
      enabled: true
      state: restart
     become: true

- name: Setting-up-as-agent
  hosts: agents
  tasks:
   - name: Install-K3s-agent
     shell:
      cmd: curl -sfL https://get.k3s.io | INSTALL_K3S_VERSION={{ k3s_version }} K3S_TOKEN={{ k3s_token }} K3S_URL=https://{{ k3s_vip }}:6443 sh -
     become: true
     args:
      warn: false
