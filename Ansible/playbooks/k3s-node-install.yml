# this installs all required components for k3s to function on a node
- name: Building-kluster
  hosts: kube
  tasks:
  - name: Cni-Install
    community.general.apk:
     name: cni-plugins  cni-plugin-flannel
     no_cache: true
     state: present
    become: true

  - name: Dbus-just-in-case
    community.general.apk:
     name: dbus
     no_cache: true
     state: present
    become: true

  - name: Install-containerd
    community.general.apk:
     name: containerd
     no_cache: true
     state: present
    become: true

  - name: Longhorn-requirements
    community.general.apk:
     name: bash curl findmnt grep gawk blkid lsblk
     no_cache: true
     state: present
    become: true

  - name: Longhorn-iscsi
    community.general.apk:
     name: open-iscsi open-iscsi-openrc
     no_cache: true
     state: present
    become: true

  - name: Longhorn-iscsi-start
    ansible.builtin.service:
     name: iscsid
     enabled: true
     state: started
    become: true

  - name: Longhorn-nfs
    community.general.apk:
     name: nfs-utils
     no_cache: true
     state: present
    become: true

  - name: Longhorn-openrc-rc-local
    ansible.builtin.template:
     src: ../templates/k3s/rc.local.start
     dest: /etc/local.d/rc.local.start
     mode: 'u+rwx'
    become: true

  - name: Longhorn-local-service
    ansible.builtin.service:
     name: local
     enabled: true
     state: restarted
    become: true

  - name: Install-Cifs
    community.general.apk:
     name: cifs-utils jq util-linux coreutils
     no_cache: true
     state: present
    become: true

  - name: Create-Folder-For-Cifs
    ansible.builtin.file:
     path: "/usr/libexec/kubernetes/kubelet-plugins/volume/exec/fstab~cifs"
     state: directory
     mode: '755'
    become: true

  - name: Download-Cifs-Plugin
    ansible.builtin.uri:
     url: https://raw.githubusercontent.com/fstab/cifs/master/cifs
     dest: "/usr/libexec/kubernetes/kubelet-plugins/volume/exec/fstab~cifs/"
     mode: '755'
     force: true
    become: true

- name: Setting-up-as-agent
  hosts: agents
  tasks:
   - name: Setting-Agent-Conf.d
     ansible.builtin.template:
      src: ../templates/k3s/confd-k3s-agent
      dest: /etc/conf.d/k3s
     become: true

- name: Setting-up-as-server
  hosts: masters,init
  tasks:
  # Kube Vip has to be setup on all nodes, including init
  - name: create-manifest-folder
    ansible.builtin.file:
     path: /var/lib/rancher/k3s/server/manifests/
     state: directory
    become: true

  - name: get-rbac-manifest
    ansible.builtin.get_url:
     url: https://kube-vip.io/manifests/rbac.yaml
     dest: /var/lib/rancher/k3s/server/manifests/kube-vip-rbac.yaml
     force: yes
    become: true

  - name: add-lines-to-manifest
    ansible.builtin.shell:
     cmd: "echo '---' | tee -a /var/lib/rancher/k3s/server/manifests/kube-vip-rbac.yaml"
    become: true

  - name: install-containered-ctr # Necessary for Alpine 3.18, because containerd no longer ships with ctr for some reason
    community.general.apk:
     name: containerd-ctr
     no_cache: true
     state: present
    become: true

  - name: start-containerd-service
    ansible.builtin.service:
     name: containerd
     state: started
    become: true

  - name: get-image
    ansible.builtin.shell:
     cmd: ctr image pull ghcr.io/kube-vip/kube-vip:{{ kube_vip_version }}
    become: true

  - name: generate-kubevip-manifest
    ansible.builtin.shell:
     cmd: ctr run --rm --net-host ghcr.io/kube-vip/kube-vip:{{ kube_vip_version }} vip /kube-vip manifest daemonset --interface {{ net_interface }} --address {{ k3s_vip }} --inCluster --taint --controlplane --services --arp --leaderElection | tee -a /var/lib/rancher/k3s/server/manifests/kube-vip-rbac.yaml
    become: true

  - name: del-image
    ansible.builtin.shell:
     cmd: ctr image rm ghcr.io/kube-vip/kube-vip:{{ kube_vip_version }}
    become: true
  
  - name: stop-containerd-service
    ansible.builtin.service:
     name: containerd
     state: stopped
    become: true

  - name: remove-containered-ctr # No longer needed
    community.general.apk:
     name: containerd-ctr
     state: removed
    become: true

  - name: Setting-Server-Conf.d
    ansible.builtin.template:
      src: ../templates/k3s/confd-k3s-server
      dest: /etc/conf.d/k3s
    become: true

- name: Installing-K3s
  hosts: kube
  tasks:
  - name: Install-K3s
    ansible.builtin.shell:
      cmd: curl -sfL https://get.k3s.io | INSTALL_K3S_VERSION={{ k3s_version }} INSTALL_K3S_SKIP_START=true sh -
    become: true
    args:
      warn: false
    
  - name: Adding-init.d
    ansible.builtin.template:
      src: ../templates/k3s/initd-k3s
      dest: /etc/init.d/k3s
    become: true

- name: Starting-The-Node
  hosts: kube,!init
  tasks:
  - name: Start-K3s
    ansible.builtin.service:
      name: k3s
      enabled: true
      state: started
    become: true